<!doctype html>
<html lang="en">
<head>
<meta name="viewport" content="width=device-width">
<meta charset="UTF-8">
<title></title>
<style>
* { margin: 0; padding: 0; }
#map_container {
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
}
#map {
  height: 100%;
}
</style>
<link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.6.2/leaflet.css" />
<!--[if lte IE 8]>
    <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.6.2/leaflet.ie.css" />
<![endif]-->
<script src="http://cdn.leafletjs.com/leaflet-0.6.2/leaflet.js"></script>
<script type="text/javascript" src="http://maps.stamen.com/js/tile.stamen.js?v1.2.2"></script>
</head>
<body>
  <div id="main">
    <div id="map_container">
      <div id="map"></div>
    </div>
  </div>
  <script type="text/javascript">
// create a map in the "map" div, set the view to a given place and zoom
var map = L.map('map').setView([51.505, -0.09], 13);

// add an OpenStreetMap tile layer
new L.StamenTileLayer("watercolor").addTo(map);
map._layersMaxZoom=20

  </script>

  <script src="http://code.jquery.com/jquery-1.10.1.min.js"></script>
  <script>
function getUrlVars() {
  var URLParams = "";
  var ps = window.location.search.split(/\?|&/);
  for (var i = 0; i<ps.length; i++) {
    if (ps[i]) {
      var p = ps[i].split(/=/);
      URLParams = URLParams + p[0] + '=' + p[1] + '&';
    }
  }
  return URLParams;
}


var funkycolors = ["blueviolet", "chartreuse", "darkblue", "darkmagenta", "green", "indigo", "maroon", "orangered", "black", "magenta", "deeppink"];
var params = getUrlVars();

$.ajax({dataType: "JSON", url: "/trails.json?"+ params })
.done(function(result) {
  var bounds = new L.LatLngBounds();

  var grouped = result.reduce(function(coll, e, i, array){
    coll[e.client_id] = coll[e.client_id] ? coll[e.client_id] : [];
    coll[e.client_id].push(e);
    return coll;
  }, {});

  for (var key in grouped) {
    var trail = grouped[key];
    var latlngs = trail.map(function(e) { return new L.LatLng(+e.latitude, +e.longitude) });
    bounds.extend(latlngs);
    var pl = new L.Polyline(latlngs, {color: funkycolors[key % funkycolors.length]}).addTo(map)
  }

  map.fitBounds(bounds);

  // start at sensible zoomlevel
  if(map.getZoom() > 16) {
    map.setZoom(16);
  }
});
  </script>
</body>
</html>
